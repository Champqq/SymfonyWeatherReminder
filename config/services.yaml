# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    openweather_api_key: '%env(OPENWEATHER_API_KEY)%'
    # config/services.yaml
    vonage_key: '%env(VONAGE_KEY)%'
    vonage_secret: '%env(VONAGE_SECRET)%'
    vonage_from: '%env(VONAGE_FROM)%'
    openai_api_key: '%env(OPENAI_API_KEY)%'
    mailer.sender: '%env(MAILER_SENDER)%'
    openweather.current_url: '%env(OPENWEATHER_CURRENT_URL)%'
    openweather.forecast_url: '%env(OPENWEATHER_FORECAST_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\Auth\Api\LoginController:
        autowire: true
        autoconfigure: true
        tags: ['controller.service_arguments']

    App\Controller\Auth\Api\RegisterApiController:
        autowire: true
        autoconfigure: true
        tags: [ 'controller.service_arguments' ]

    App\Controller\Auth\RegisterController:
        autowire: true
        autoconfigure: true
        tags: [ 'controller.service_arguments' ]

    App\Service\Weather\WeatherService: ~

    App\Service\Message\Builder\RecommendationService:
        arguments:
            $apiKey: '%env(OPENAI_API_KEY)%'

    App\DataFixtures\:
        resource: '../src/DataFixtures/'
        tags: [ 'doctrine.fixture.orm' ]

    App\Service\Message\Sender\SmsSender:
        arguments:
            $client: '@vonage.client'
            $from: '%env(VONAGE_FROM)%'

    vonage.client:
        class: Vonage\Client
        factory: [ 'App\Factory\VonageClientFactory', 'create' ]
        arguments:
            $key: '%env(VONAGE_KEY)%'
            $secret: '%env(VONAGE_SECRET)%'

    App\Service\Message\Sender\EmailSender:
        arguments:
            $senderAddress: '%env(MAILER_SENDER)%'

    App\Service\Weather\HttpWeatherClient:
        arguments:
            $apiKey: '%env(OPENWEATHER_API_KEY)%'
            $currentUrl: '%env(OPENWEATHER_CURRENT_URL)%'
            $forecastUrl: '%env(OPENWEATHER_FORECAST_URL)%'

    app.command.fetch_weather_data:
        class: App\Command\FetchWeatherDataCommand
        tags:
            - { name: 'console.command' }

    App\MessageHandler\ScheduledFetchWeatherMessageHandler:
        arguments:
            $fetchWeatherCommand: '@app.command.fetch_weather_data'